{"ast":null,"code":"var _jsxFileName = \"/Users/briankim/Desktop/Samplify/website/src/Pages/home.js\",\n  _s = $RefreshSig$();\nimport '../App.css';\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [videoId, setVideoID] = useState(null);\n  console.log(\"sent\");\n  useEffect(() => {\n    fetch(\"./getRandomVideo\").then(function (data) {\n      console.log(data);\n      console.log(\"received\");\n      return data.json();\n    }).then(function (obj) {\n      console.log(\"2nd then\");\n      console.log(obj);\n      setVideoID(obj.data);\n    });\n  }, []);\n  const embedUrl = `https://www.youtube.com/embed/${videoId}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"page-wrap\",\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"HOME PAGE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: '10px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n          id: \"ytvideo\",\n          width: \"560\",\n          height: \"315\",\n          src: embedUrl // Update the src attribute dynamically\n          ,\n          title: \"YouTube video player\",\n          frameBorder: \"0\",\n          allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n          allowFullScreen: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n        title: \"downloadFrame\",\n        src: `http://convert2mp3s.com/api/single/mp3?url=${embedUrl}`,\n        width: \"50%\",\n        height: \"50%\",\n        allowtransparency: \"true\",\n        scrolling: \"no\",\n        style: {\n          border: 'none'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"3w+YOOvExUz/pkv1B59X8lIBOlI=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","_s","videoId","setVideoID","console","log","fetch","then","data","json","obj","embedUrl","id","children","fileName","_jsxFileName","lineNumber","columnNumber","style","padding","width","height","src","title","frameBorder","allow","allowFullScreen","allowtransparency","scrolling","border","_c","$RefreshReg$"],"sources":["/Users/briankim/Desktop/Samplify/website/src/Pages/home.js"],"sourcesContent":["import '../App.css';\nimport React,{useEffect, useState} from 'react';\n\n\nconst Home = () => {\n  const [videoId, setVideoID] = useState(null);\n  console.log(\"sent\");\n  useEffect(() =>{\n    fetch(\"./getRandomVideo\").then(function(data){\n      console.log(data);\n      console.log(\"received\");\n      return data.json();\n    }).then(function(obj){\n      console.log(\"2nd then\");\n      console.log(obj);\n      setVideoID(obj.data);\n    });\n  },[])\n  const embedUrl = `https://www.youtube.com/embed/${videoId}`;\n  return (\n    <div id = \"page-wrap\">\n    { <>\n      <h1>HOME PAGE</h1>\n      <div style={{padding: '10px'}}>\n      <iframe\n            id=\"ytvideo\"\n            width=\"560\"\n            height=\"315\"\n            src={embedUrl} // Update the src attribute dynamically\n            title=\"YouTube video player\"\n            frameBorder=\"0\"\n            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n            allowFullScreen\n          ></iframe>\n      </div>\n\n      <iframe title=\"downloadFrame\" src={`http://convert2mp3s.com/api/single/mp3?url=${embedUrl}`}\n        width=\"50%\" height=\"50%\" allowtransparency=\"true\" scrolling=\"no\" style={{ border: 'none' }}></iframe></>\n    }\n  </div>\n  );\n};\n  \nexport default Home;"],"mappings":";;AAAA,OAAO,YAAY;AACnB,OAAOA,KAAK,IAAEC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGhD,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC5CS,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;EACnBX,SAAS,CAAC,MAAK;IACbY,KAAK,CAAC,kBAAkB,CAAC,CAACC,IAAI,CAAC,UAASC,IAAI,EAAC;MAC3CJ,OAAO,CAACC,GAAG,CAACG,IAAI,CAAC;MACjBJ,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;MACvB,OAAOG,IAAI,CAACC,IAAI,EAAE;IACpB,CAAC,CAAC,CAACF,IAAI,CAAC,UAASG,GAAG,EAAC;MACnBN,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;MACvBD,OAAO,CAACC,GAAG,CAACK,GAAG,CAAC;MAChBP,UAAU,CAACO,GAAG,CAACF,IAAI,CAAC;IACtB,CAAC,CAAC;EACJ,CAAC,EAAC,EAAE,CAAC;EACL,MAAMG,QAAQ,GAAI,iCAAgCT,OAAQ,EAAC;EAC3D,oBACEL,OAAA;IAAKe,EAAE,EAAG,WAAW;IAAAC,QAAA,eACnBhB,OAAA,CAAAE,SAAA;MAAAc,QAAA,gBACAhB,OAAA;QAAAgB,QAAA,EAAI;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eAClBpB,OAAA;QAAKqB,KAAK,EAAE;UAACC,OAAO,EAAE;QAAM,CAAE;QAAAN,QAAA,eAC9BhB,OAAA;UACMe,EAAE,EAAC,SAAS;UACZQ,KAAK,EAAC,KAAK;UACXC,MAAM,EAAC,KAAK;UACZC,GAAG,EAAEX,QAAS,CAAC;UAAA;UACfY,KAAK,EAAC,sBAAsB;UAC5BC,WAAW,EAAC,GAAG;UACfC,KAAK,EAAC,0FAA0F;UAChGC,eAAe;QAAA;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MACP;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACR,eAENpB,OAAA;QAAQ0B,KAAK,EAAC,eAAe;QAACD,GAAG,EAAG,8CAA6CX,QAAS,EAAE;QAC1FS,KAAK,EAAC,KAAK;QAACC,MAAM,EAAC,KAAK;QAACM,iBAAiB,EAAC,MAAM;QAACC,SAAS,EAAC,IAAI;QAACV,KAAK,EAAE;UAAEW,MAAM,EAAE;QAAO;MAAE;QAAAf,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAU;IAAA;EAAG;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAExG;AAER,CAAC;AAAChB,EAAA,CArCID,IAAI;AAAA8B,EAAA,GAAJ9B,IAAI;AAuCV,eAAeA,IAAI;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}