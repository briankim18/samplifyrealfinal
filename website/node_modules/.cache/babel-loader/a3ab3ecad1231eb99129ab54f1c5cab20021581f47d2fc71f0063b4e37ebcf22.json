{"ast":null,"code":"var _jsxFileName = \"/Users/briankim/Desktop/Samplify/website/src/Pages/history.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst History = () => {\n  _s();\n  const [videoIds, setVideoIds] = useState([]);\n  useEffect(() => {\n    const history = JSON.parse(localStorage.getItem('history')) || [];\n    setVideoIds(history);\n  }, []);\n  const handleClearHistory = () => {\n    localStorage.removeItem('history');\n    setVideoIds([]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"page-wrap\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), videoIds.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No videos watched yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        children: videoIds.map(videoId => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n            width: \"560\",\n            height: \"315\",\n            src: `https://www.youtube.com/embed/${videoId}`,\n            title: \"YouTube video player\",\n            frameBorder: \"0\",\n            allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n            allowFullScreen: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 17\n          }, this)\n        }, videoId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClearHistory,\n        children: \"Clear History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(History, \"XFl3orkgUkswktURNoIL+MCQ3zo=\");\n_c = History;\nexport default History;\n\n// import React, { useEffect, useState } from 'react';\n\n// const History = () => {\n//   const [videoIds, setVideoIds] = useState([]);\n\n//   useEffect(() => {\n//     fetch('./getVideoIds').then((data) => {\n//       return data.json();\n//     }).then((obj) => {\n//       setVideoIds(obj.data);\n//     });\n//   }, []);\n\n//   return (\n//     <div>\n//       <h1>This will show history!</h1>\n//       {videoIds.map((videoId) => {\n//         const embedUrl = `https://www.youtube.com/embed/${videoId}`;\n//         return (\n//           <div key={videoId}>\n//             <iframe\n//               width=\"560\"\n//               height=\"315\"\n//               src={embedUrl}\n//               title=\"YouTube video player\"\n//               frameBorder=\"0\"\n//               allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n//               allowFullScreen\n//             ></iframe>\n//           </div>\n//         );\n//       })}\n//     </div>\n//   );\n// };\n\n// export default History;\n\n// import '../App.css';\n// import React,{useEffect, useState} from 'react';\n\n// const Home = () => {\n//   const [videoId, setVideoID] = useState(null);\n//   console.log(\"sent\");\n//   useEffect(() =>{\n//     fetch(\"./getRandomVideo\").then(function(data){\n//       console.log(data);\n//       console.log(\"received\");\n//       return data.json();\n//     }).then(function(obj){\n//       console.log(\"2nd then\");\n//       console.log(obj);\n//       setVideoID(obj.data);\n//     });\n//   },[])\n//   const embedUrl = `https://www.youtube.com/embed/${videoId}`;\n//   const downloadUrl = `https://youtu.be/${videoId}`;\n\n//   return (\n//     <div id = \"page-wrap\">\n//     { <>\n//       <h1>HOME PAGE</h1>\n//       <div style={{padding: '10px'}}>\n//       <iframe\n//             id=\"ytvideo\"\n//             width=\"560\"\n//             height=\"315\"\n//             src={embedUrl} // Update the src attribute dynamically\n//             title=\"YouTube video player\"\n//             frameBorder=\"0\"\n//             allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n//             allowFullScreen\n//           ></iframe>\n//       </div>\n\n//       <iframe title=\"downloadFrame\" src={`http://convert2mp3s.com/api/single/mp3?url=${downloadUrl}`}\n//         width=\"50%\" height=\"50%\" allowtransparency=\"true\" scrolling=\"no\" style={{ border: 'none' }}></iframe></>\n//     }\n//   </div>\n//   );\n// };\n\n// export default Home;\nvar _c;\n$RefreshReg$(_c, \"History\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","History","_s","videoIds","setVideoIds","history","JSON","parse","localStorage","getItem","handleClearHistory","removeItem","id","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","videoId","width","height","src","title","frameBorder","allow","allowFullScreen","onClick","_c","$RefreshReg$"],"sources":["/Users/briankim/Desktop/Samplify/website/src/Pages/history.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst History = () => {\n  const [videoIds, setVideoIds] = useState([]);\n\n  useEffect(() => {\n    const history = JSON.parse(localStorage.getItem('history')) || [];\n    setVideoIds(history);\n  }, []);\n\n  const handleClearHistory = () => {\n    localStorage.removeItem('history');\n    setVideoIds([]);\n  };\n\n  return (\n    <div id=\"page-wrap\">\n      <h1>History</h1>\n      {videoIds.length === 0 ? (\n        <p>No videos watched yet.</p>\n      ) : (\n        <>\n          <ul>\n            {videoIds.map((videoId) => (\n              <li key={videoId}>\n                <iframe\n                  width=\"560\"\n                  height=\"315\"\n                  src={`https://www.youtube.com/embed/${videoId}`}\n                  title=\"YouTube video player\"\n                  frameBorder=\"0\"\n                  allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                  allowFullScreen\n                ></iframe>\n              </li>\n            ))}\n          </ul>\n          <button onClick={handleClearHistory}>Clear History</button>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default History;\n\n// import React, { useEffect, useState } from 'react';\n\n// const History = () => {\n//   const [videoIds, setVideoIds] = useState([]);\n\n//   useEffect(() => {\n//     fetch('./getVideoIds').then((data) => {\n//       return data.json();\n//     }).then((obj) => {\n//       setVideoIds(obj.data);\n//     });\n//   }, []);\n\n//   return (\n//     <div>\n//       <h1>This will show history!</h1>\n//       {videoIds.map((videoId) => {\n//         const embedUrl = `https://www.youtube.com/embed/${videoId}`;\n//         return (\n//           <div key={videoId}>\n//             <iframe\n//               width=\"560\"\n//               height=\"315\"\n//               src={embedUrl}\n//               title=\"YouTube video player\"\n//               frameBorder=\"0\"\n//               allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n//               allowFullScreen\n//             ></iframe>\n//           </div>\n//         );\n//       })}\n//     </div>\n//   );\n// };\n\n// export default History;\n\n\n// import '../App.css';\n// import React,{useEffect, useState} from 'react';\n\n\n// const Home = () => {\n//   const [videoId, setVideoID] = useState(null);\n//   console.log(\"sent\");\n//   useEffect(() =>{\n//     fetch(\"./getRandomVideo\").then(function(data){\n//       console.log(data);\n//       console.log(\"received\");\n//       return data.json();\n//     }).then(function(obj){\n//       console.log(\"2nd then\");\n//       console.log(obj);\n//       setVideoID(obj.data);\n//     });\n//   },[])\n//   const embedUrl = `https://www.youtube.com/embed/${videoId}`;\n//   const downloadUrl = `https://youtu.be/${videoId}`;\n  \n//   return (\n//     <div id = \"page-wrap\">\n//     { <>\n//       <h1>HOME PAGE</h1>\n//       <div style={{padding: '10px'}}>\n//       <iframe\n//             id=\"ytvideo\"\n//             width=\"560\"\n//             height=\"315\"\n//             src={embedUrl} // Update the src attribute dynamically\n//             title=\"YouTube video player\"\n//             frameBorder=\"0\"\n//             allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n//             allowFullScreen\n//           ></iframe>\n//       </div>\n\n//       <iframe title=\"downloadFrame\" src={`http://convert2mp3s.com/api/single/mp3?url=${downloadUrl}`}\n//         width=\"50%\" height=\"50%\" allowtransparency=\"true\" scrolling=\"no\" style={{ border: 'none' }}></iframe></>\n//     }\n//   </div>\n//   );\n// };\n  \n// export default Home;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEnD,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,MAAMS,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE;IACjEL,WAAW,CAACC,OAAO,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,kBAAkB,GAAGA,CAAA,KAAM;IAC/BF,YAAY,CAACG,UAAU,CAAC,SAAS,CAAC;IAClCP,WAAW,CAAC,EAAE,CAAC;EACjB,CAAC;EAED,oBACEN,OAAA;IAAKc,EAAE,EAAC,WAAW;IAAAC,QAAA,gBACjBf,OAAA;MAAAe,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,EACfd,QAAQ,CAACe,MAAM,KAAK,CAAC,gBACpBpB,OAAA;MAAAe,QAAA,EAAG;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI,gBAE7BnB,OAAA,CAAAE,SAAA;MAAAa,QAAA,gBACEf,OAAA;QAAAe,QAAA,EACGV,QAAQ,CAACgB,GAAG,CAAEC,OAAO,iBACpBtB,OAAA;UAAAe,QAAA,eACEf,OAAA;YACEuB,KAAK,EAAC,KAAK;YACXC,MAAM,EAAC,KAAK;YACZC,GAAG,EAAG,iCAAgCH,OAAQ,EAAE;YAChDI,KAAK,EAAC,sBAAsB;YAC5BC,WAAW,EAAC,GAAG;YACfC,KAAK,EAAC,0FAA0F;YAChGC,eAAe;UAAA;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QACP,GATHG,OAAO;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAWjB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACC,eACLnB,OAAA;QAAQ8B,OAAO,EAAElB,kBAAmB;QAAAG,QAAA,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA,gBAE9D;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACG;AAEV,CAAC;AAACf,EAAA,CAxCID,OAAO;AAAA4B,EAAA,GAAP5B,OAAO;AA0Cb,eAAeA,OAAO;;AAEtB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}